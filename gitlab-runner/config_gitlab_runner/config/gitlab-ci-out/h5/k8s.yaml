---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: template_sever_name
  namespace: template_namespace_name
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
    nginx.ingress.kubernetes.io/proxy-buffer-size: "800k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "400"
spec:
  rules:
    - host: template_sever_name.template_namespace_name.template_ingress_domain_prefix
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: template_sever_name
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: template_sever_name
  name: template_sever_name
  namespace: template_namespace_name
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: template_sever_name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: template_sever_name
  namespace: template_namespace_name
spec:
  replicas: template_rc_init_count
  selector:
    matchLabels:
      app: template_sever_name
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: template_sever_name
    spec:
      nodeSelector:
        "shilintan.io/service-type-service-java": "v"
      containers:
        - name: app
          image: template_sever_image
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Asia/Shanghai
          ports:
            - containerPort: 80
              name: http
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 256m
              memory: 1024Mi
          livenessProbe:
            failureThreshold: 300
            httpGet:
              path: /actuator
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /actuator
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 100
      imagePullSecrets:
        - name: regcred